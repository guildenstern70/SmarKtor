{
  "openapi": "3.0.0",
  "info": {
    "title": "SmarKtor OpenApi",
    "description": "SmarKtor OpenApi",
    "contact": {
      "email": "alessiosaltarin@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://mit-license.org/"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://0.0.0.0:8080/api/v1/",
      "description": "SmarKtor OpenApi"
    }
  ],
  "tags": [
    {
      "name": "user-controller",
      "description": "Users Controller"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "get all users",
        "description": "Get all users\n",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "get all users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "adds a new user",
        "description": "Adds a new user",
        "operationId": "add User",
        "requestBody": {
          "description": "Use to add a new user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "user created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing user already exists"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "get specific user",
        "description": "Get specific users\n",
        "operationId": "getSpecificUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "specific user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        }
      },
      "delete": {
        "tags": [
          "user-controller"
        ],
        "summary": "delete specific user",
        "description": "Delete specific user\n",
        "operationId": "deleteSpecificUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user deleted"
          },
          "404": {
            "description": "user id not found"
          }
        }
      }
    },
    "/users/byusername/{username}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "get specific user by username",
        "description": "Get specific user by username\n",
        "operationId": "getUserByUsername",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "specific user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "required": [
          "age",
          "id",
          "name",
          "password",
          "surname",
          "username"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "passowrd": {
            "type": "string"
          },
          "age": {
            "type": "string",
            "format": "int"
          }
        }
      }
    }
  }
}